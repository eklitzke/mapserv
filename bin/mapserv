#!/usr/bin/env python

import sqlite3
from thrift.transport import TSocket, TTransport
from thrift.protocol import TBinaryProtocol
from thrift.server import TServer
from mapserv import lyric
import mapserv.config
from mapserv.interfaces.query import QueryService

class MapservHandler(object):

    def __init__(self):
        self.conn = sqlite3.connect(':memory:')

    def create(self, name, cols):
        lyric.sqlite.create(self.conn, name, cols)

    def drop(self, name):
        lyric.sqlite.drop(self.conn, name)

    def existing_tables(self):
        return lyric.sqlite.existing_table_names(self.conn)

    def insert(self, row):
        return lyric.sqlite.insert(self.conn, row)

    def select(self, query):
        return lyric.sqlite.delete(self.conn, query)

    def truncate(self, query):
        return lyric.sqlite.delete(self.conn, query)

def main(port):
    server = TServer.TSimpleServer(QueryService.Processor(MapservHandler()),
                                   TSocket.TServerSocket(port),
                                   TTransport.TBufferedTransportFactory(),
                                   TBinaryProtocol.TBinaryProtocolFactory())
    server.serve()

if __name__ == '__main__':
    cfg = mapserv.config.load()
    main(cfg['port'])
